    本节是class04课程记录，代码在class03的基础上写。本节的代码注释跟在代码后面可直接查询，主要完成注册，登录，浏览，优化
index首页的功能。

<1>注册功能实现
    注册时要点：
    1.用户名合法性检测（长度，敏感词，重复，特殊字符）；2.密码salt加墨，密码强度检测；3.用户邮件/短信激活。
    实现方法：
    要单独写一个注册函数，即点击注册时的后台处理过程，reg函数，主要有下面的几个步骤：
1.获取用户提交的用户名/密码；2.业务处理，对用户名/密码进行业务逻辑判断；3.密码进行salt加密；4.将数据插入数据库；5.注册好
后自动登录；6.最终返回，要在登录注册页做一个消息的提取，显示注册状态等。
    代码可见views.py中的reg函数，就不多说了，知识点都在里面记录。


<2>登录/登出功能实现
(1)登录时要点：
1.服务器密码校验/三方校验回调，token登记
    服务器端token关联userid
    客户端存储token(app到存储本地，浏览器存储到cookie)
2.服务端/客户端token有效期设置(记住登录)
    注：token可以是sessionid，或者是cookie里的一个key。
    提交用户名/密码到服务器，然后服务器验证这2个对不对，如果是对的则就登陆成功了；那怎么登记呢，会在cookie里放一个token的值，
该值是服务器下发的，然后服务器会记录下token的值会跟userid是关联起来的；然后服务器端要把这个关联存起来，可以存在内存里，数
据库里，session里都可以；然后客户端也要把服务器下发的这个关联存起来，app到存储本地，浏览器存储到cookie；然后每次请求接口
的时候都要带上，这样后端才会知道是谁。
    记住登录即在服务端/客户端的token与userid的关联记录有一个有效期。
    登录代码流程：1.获取用户名/密码；2.业务逻辑判断用户名/密码；3.最终则登录用户并回首页；
(2)登出时要点：
1.服务端/客户端token删除
2.session清理
    登出即删掉token与userid的关联即可。


<3>页面访问
(1)页面访问时要点(即访问的步骤)：
1.客户端：带token的HTTP请求，token可以是sessionid，可以是cookie里的一个key。
2.服务端：
    1.根据token获取用户id
    2.根据用户id获取用户的具体信息(比如用户名，用户有哪些权限等)
    3.用户和页面访问权限处理(根据具体权限可以有哪些操作)
    4.渲染页面/跳转页面
    注：页面访问一定有一个登录的过程。
(2)页面访问将使用Flask-Login工具(把token下发，cookie提取等都给包装好了)，要点如下：https://www.jianshu.com/p/5a25413b4828
1.初始化：login_manager = LoginManager(app)  # 唯一实例的一个登记
2.回调函数(通过session里的id获取用户信息)
如何登录？
    你将需要提供一个user_loader回调。这个回调被用来从对话里存储的用户ID中重新加载用户对象。它应该获取用户的unicode ID，以
及返回对应的用户对象。例如：
        @login_manager.user_loader
        def load_user(user_id):
            return User.query.get(user_id)
3.User类需要实现这些特性和方法：
is_authenticated：
    这个特性应该返回True，如果用户已经被认证，也就是说他们已经提供有效的证明。（只有认证的用户将完成login_required标准）
is_active：
    这个特性应该返回True，如果这是一个除了作为身份认证的活动的用户，他们也激活了他们的账号，没有被废除，或者在任何情况你
的应用程序拒绝了一个账号。不活跃的用户或许不能登录进去（除了被强制的过程）。
is_anonymous：
    这个特性应该返回True，如果这是一个匿名用户。（实际用户应该返回False来代替）。
get_id()：
    这个方法必须返回一个唯一标识该用户的unicode，以及可能被用来从user_loader回调来加载用户。注意这个必须是unicode字符，
如果ID是原始的int类型或者一些其他类型，你将需要转换它变成unicode字符。
4.Flask-login库中主要使用的核心函数：
    login_user(user)  # 登录用户，如果用户验证成功，则对其进行登录
    logout_user()     # 登出用户，把用户的cookie，session等删掉
    login_required    # 指定某些页面是先登录再可以访问的，即在某个页面访问函数前加上@login_required 即可达到先登录再访问的目的
    current_user      # 如果登录成功，就会有一个全局变量，用于在base.html中，动态的加载跳转页面；即是跳转到个人页还是返回主页；
                      # 这个字段是全局可用的，工程中都能用。










