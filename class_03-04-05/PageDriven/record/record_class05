    前几节做了很多页面请求都是提交表，比如登录注册，提交用户名/密码。由于我们是一个图片分享网站，最核心的部分还是将图片
发到服务器上，那图片是怎么发送到服务器上去呢？前面讲过HTTP协议的get请求，post请求，到底底层HTTP是怎么把图片传上去的呢？
在python中是怎么把图片的二进制流取出来并保存到文件？

<1>图片上传
(1)
    工具：fiddle web debugger，帮助辅助了解HTTP底层的一个工具。打开后，该工具会创建一个代理服务器，默认端口为8888,。
然后设置浏览器的代理服务器(访问网页，其实不是直接访问网页，而是先访问代理服务器，代理服务器再把网页的请求过来再返回
给浏览器)，那么代理服务器作为一个中间商，现在让fiddle web debugger这个工具设立，那么请求的所有东西都可以通过这个工具一
探究竟。
(2)
HTTP POST 单变量：
    举例：当在V2EX上传图片时，我们可以看到捕获的内容为HTTP协议的标准头的一部分(比如post，协议名，URL名，长度等)，还会看
到上传的图片的内容，即body data。则我们的HTTP协议传送就是首先构造HTTP的各种header头，然后在尾部加上需要传送内容的二进制
码。里面的header部分有上传内容的信息，比如类型，长度等等，将最后的二进制保留下来我们的内容就提取出来了。则跟web serever
交互图片是通过post请求上传的。
(3)
HTTP POST 多变量：
    道理同上，当上传多个文件时，在HTTP的头里面定义了一个boundary，boundary就是各种参数的分隔符。HTTP的post请求的BODY部分，
会有不同文件的二进制流，每一个文件结束之后后面有一个分隔符，然后再跟一个上传的文件；就是通过这种方式上传多文件。而且为了
能区分不同文件，分隔符也起作用。
(4)
    下面演示代码部分，在views.py文件中。
上传步骤：
    1.将上传的文件的信息通过request请求获取出来，保存在变量file中；
    2.将文件后缀名取出存入file_ext变量中；
    3.将图片提交至服务器之前，先对文件的后缀名做一个验证，看后缀名是否在配置文件允许范围之内;若符合，则将文件保存在服务
器，并获得一个URL地址；(调用sava_to_local函数，将上传的图片在本地保存,并返回一个可以访问的URL地址)；
    4.如果URL存在，则将该图存储到数据库当中；
    5.调用view_image函数，其实是flask的send_from_directory，上传图片之后，web需要显示；则此处添加一个图片显示函数；
    6.全部执行完后，将跳转回当前上传图片的用户的个人详情页去；


<2>七牛云存储
(1)为什么用云？
    牛客网的图片都是存储在static.nowcoder.com，即放在一个静态服务器上，是阿里云的服务器。为什么呢？
    1.服务器中静态与动态的页面是要分离的，因为静态的页面请求量比较大，这样会占据带宽，影响核心服务器动态页面的展示；这样
分离之后前端后端分开开发，前端更新之后直接部署到静态服务器上，新网站即重新运行起来了。
    2.在一开始的save_to_local函数我们是把上次的图片保存在的本地的服务器，即本机磁盘，如果是小网站还好，通过一个磁盘访问
即可。但是大网站，是好几十台机器的，上传是在第一台上传时不可能存在第一台的，因为访问可能在后几台。所以需要一个统一中心，
将图片保存在这个中心上，即我们用到的xx云。
(2)用什么云？
    牛客用的阿里云。我们用七牛云，因为不要钱，每月10G流量。
(3)代码逻辑
    我们写的qiniusdk.py 仅仅只有上传文件的功能，因为我们的web暂时只有这个功能。所以代码比较少，他还有很多功能，比如官网
的SDK中还有复制文件，移动，删除文件等等。详情可见官方python SDK：
https://developer.qiniu.com/kodo/sdk/1242/python#upload
    这个七牛云服务器就是用于保存我们上传的图片，写的代码就是根据官方文档将七牛服务器的配置信息写好，然后调用一些发送函数
等。这一块本质还是上传图片，只不过存储在了云服务器中，所以我们搞懂上传到云这一部分即可。
    0.获得了待上传文件以及文件名后；
    1.上传客户端向业务服务器申请一个上传凭证(Upload Token)；业务服务器返回一个上传凭证(token)给上传客户端；
    2.上传客户端构建上传请求，上传文件到七牛云存储服务器；七牛云存储服务器返回客户端文件上传的结果；
    3.根据上传状态如何，将文件所在七牛云服务器的URL地址返回；
    4.返回views.py函数，将url地址存入Image表的数据库中。
(4)云实时缩图
    每种云都可以进行实时缩图，就是根据在URL处输入参数的不同对图片进行切割大小。
    好处：1.当需要改需求的时候，如果不在云切割，将会工作量巨大；2.同一张图片，某些地方可能要求为100*100，而图片本身很大，
则此时切割之后会降低网络流量，提高体验度。
(5)静态独立/CDN
    作用：提高每个人浏览网页的速度。
    原理：全国有不同的用户，当他们访问服务器(源站)时，每个用户离源站的距离不同，为了更快的让用户访问到资源，会有一些CDN
结点在用户与源站之间，可以使用户访问最近的距离，即源站提前下发资源到各个CDN结点，然后用户访问离他们最近的CDN结点即可完
成资源的访问，提高浏览速度。
    阿里云/七牛云都支持CDN这些，但是需要花钱去买。


<3>图片详情页增加评论
    1.仅仅对图片增加评论，所以其他地方不必刷新，即异步刷新，AJAX请求。
    2.为何用post请求？它是可以向服务器发送修改请求，从而修改服务器的，比方说，我们要在论坛上回贴、在博客上评论，这就要用到
 Post了，当然它也是可以仅仅获取数据的。https://zhidao.baidu.com/question/1759920971069677948.html
    3.postman调试，通过network/XHR按钮查看点击增加评论后来自image_id,content的内容，则我们就通过request.values请求获取这2
部分。因为model.py中的Comment类的构造函数需要content,image_id,user_id。构造一条comment实例才可以add到数据库中，然后前端
读取数据库中的评论显示。所以这就是思路：request到所需的几部分，构造实例，增加到数据库，前端显示。
    代码很少，看views.py中的add_comment_to_pageDetail()即可。


<4>首页图片增加评论










