    前几节做了很多页面请求都是提交表，比如登录注册，提交用户名/密码。由于我们是一个图片分享网站，最核心的部分还是将图片
发到服务器上，那图片是怎么发送到服务器上去呢？前面讲过HTTP协议的get请求，post请求，到底底层HTTP是怎么把图片传上去的呢？
在python中是怎么把图片的二进制流取出来并保存到文件？

<1>图片上传
(1)
    工具：fiddle web debugger，帮助辅助了解HTTP底层的一个工具。打开后，该工具会创建一个代理服务器，默认端口为8888,。
然后设置浏览器的代理服务器(访问网页，其实不是直接访问网页，而是先访问代理服务器，代理服务器再把网页的请求过来再返回
给浏览器)，那么代理服务器作为一个中间商，现在让fiddle web debugger这个工具设立，那么请求的所有东西都可以通过这个工具一
探究竟。
(2)
HTTP POST 单变量：
    举例：当在V2EX上传图片时，我们可以看到捕获的内容为HTTP协议的标准头的一部分(比如post，协议名，URL名，长度等)，还会看
到上传的图片的内容，即body data。则我们的HTTP协议传送就是首先构造HTTP的各种header头，然后在尾部加上需要传送内容的二进制
码。里面的header部分有上传内容的信息，比如类型，长度等等，将最后的二进制保留下来我们的内容就提取出来了。则跟web serever
交互图片是通过post请求上传的。
(3)
HTTP POST 多变量：
    道理同上，当上传多个文件时，在HTTP的头里面定义了一个boundary，boundary就是各种参数的分隔符。HTTP的post请求的BODY部分，
会有不同文件的二进制流，每一个文件结束之后后面有一个分隔符，然后再跟一个上传的文件；就是通过这种方式上传多文件。而且为了
能区分不同文件，分隔符也起作用。
(4)
    下面演示代码部分，在views.py文件中。
上传步骤：
    1.将上传的文件的信息通过request请求获取出来，保存在变量file中；
    2.将文件后缀名取出存入file_ext变量中；
    3.将图片提交至服务器之前，先对文件的后缀名做一个验证，看后缀名是否在配置文件允许范围之内;若符合，则将文件保存在服务
器，并获得一个URL地址；(调用sava_to_local函数，将上传的图片在本地保存,并返回一个可以访问的URL地址)；
    4.如果URL存在，则将该图存储到数据库当中；
    5.调用view_image函数，其实是flask的send_from_directory，上传图片之后，web需要显示；则此处添加一个图片显示函数；
    6.全部执行完后，将跳转回当前上传图片的用户的个人详情页去；


<2>七牛云存储